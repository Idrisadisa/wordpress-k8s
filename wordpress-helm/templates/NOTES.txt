1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.wordpress.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "wordpress.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.wordpress.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "wordpress.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "wordpress.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.wordpress.service.port }}
{{- else if contains "ClusterIP" .Values.wordpress.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "wordpress.wordpress.selectorLabels" . | replace ": " "=" | replace "\n" "," }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. WordPress Admin Credentials:
   Username: {{ .Values.wordpress.auth.username }}
   {{- if .Values.wordpress.auth.password }}
   Password: Use the password you provided in values.yaml
   {{- else }}
   Password: Get the auto-generated password by running:
   kubectl get secret --namespace {{ .Release.Namespace }} {{ include "wordpress.secretName" . }} -o jsonpath="{.data.wordpress-password}" | base64 -d
   {{- end }}

3. Database Connection Details:
   {{- if .Values.mysql.enabled }}
   Host: {{ include "wordpress.fullname" . }}-mysql
   Database: {{ .Values.mysql.auth.database }}
   Username: {{ .Values.mysql.auth.username }}
   {{- else }}
   Configure external database connection in values.yaml
   {{- end }}

4. Useful Commands:
   - Check pod status: kubectl get pods -n {{ .Release.Namespace }}
   - View logs: kubectl logs -f deployment/{{ include "wordpress.fullname" . }} -n {{ .Release.Namespace }}
   - Scale deployment: kubectl scale deployment {{ include "wordpress.fullname" . }} --replicas=3 -n {{ .Release.Namespace }}

{{- if .Values.wordpress.persistence.enabled }}
5. Persistence:
   WordPress data is persisted using PVC: {{ include "wordpress.fullname" . }}-wordpress
   {{- if and .Values.mysql.enabled .Values.mysql.persistence.enabled }}
   MySQL data is persisted using PVC: {{ include "wordpress.fullname" . }}-mysql
   {{- end }}
{{- else }}
WARNING: Persistence is disabled. Data will be lost when pods are terminated.
{{- end }}

{{- if not .Values.ingress.enabled }}
WARNING: Ingress is disabled. WordPress will only be accessible within the cluster.
{{- end }}

For more information about this chart, visit: https://github.com/your-org/wordpress-helm